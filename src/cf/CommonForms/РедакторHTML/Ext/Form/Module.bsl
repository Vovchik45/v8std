#Область ОписаниеПеременных

&НаКлиенте
Перем editorHTML;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПутьКРедактору = Константы.ПутьКHTMLРедактору.Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		// http://localhost/index.html
		Если СтрНайти(ПутьКРедактору, "/index.html") = 0 Тогда
			ВызватьИсключение НСтр("ru='Не указан путь к редактору HTML на веб-сервере'");
		КонецЕсли;
		ОписаниеHTML = ПутьКРедактору;
	#Иначе
		Если ПутьКРедактору = "" Тогда
			ПутьКРедактору = КаталогВременныхФайлов();
			ОписаниеHTML = УстановитьHTMLEditor(ПутьКРедактору);
		Иначе
			ОписаниеHTML = ПутьКРедактору;
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОписаниеHTMLДокументСформирован(Элемент)
	
	Если editorHTML = Неопределено Тогда
		editorHTML = Элементы.ОписаниеHTML.Документ.defaultView.Init();
		Если editorHTML <> Неопределено Тогда
			editorHTML.core.commandHandler(, "fullScreen");
			editorHTML.core.focus();
			ПолучитьHTMLИзСтандарта(Параметры.СтандартРазработки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьHTML(Команда)
	
	ТекстHTML = editorHTML.getContents();
	РаботаСHTMLКлиентСервер.ЗаменитьСодержаниеТега(ТекстHTML, "head", ОригинальныйHEAD);
	
	ПоместитьHTMLВСтандартНаСервере(Параметры.СтандартРазработки, ТекстHTML);
	
	ОповеститьОбИзменении(Параметры.СтандартРазработки);
	Оповестить("ИзменениеСодержимогоСтандарта", Параметры.СтандартРазработки, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	ОО = Новый ОписаниеОповещения("ПослеВопросаЗакрытиеФормы", ЭтотОбъект);
	
	ПоказатьВопрос(
		ОО,
		НСтр("ru='Несохраненные изменения будут потеряны. Продолжить?'"),
		РежимДиалогаВопрос.ОКОтмена,
		,
		КодВозвратаДиалога.Отмена,
		НСтр("ru='Закрытие редактора HTML'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаЗакрытиеФормы(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = Неопределено 
		Или Ответ = КодВозвратаДиалога.Таймаут
		Или Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
		
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция УстановитьHTMLEditor(РабочийКаталог)
	
	КаталогКомпоненты = "SunEditorHTML";
	
	РазделительПути = ПолучитьРазделительПутиКлиента();
	Если Не СтрЗаканчиваетсяНа(РабочийКаталог, РазделительПути) Тогда
		РабочийКаталог = РабочийКаталог + РазделительПути;
	КонецЕсли;
	
	ПутьКФайлуРедактора = РабочийКаталог + КаталогКомпоненты + РазделительПути + "index.html";
	
	КаталогНаДиске = Новый Файл(РабочийКаталог + КаталогКомпоненты);
	ФайлРедактораНаДиске = Новый Файл(ПутьКФайлуРедактора);
	
	Если НЕ КаталогНаДиске.Существует() Или Не ФайлРедактораНаДиске.Существует() Тогда
		
		Макет = ПолучитьИзВременногоХранилища(ПолучитьМакетНаСервере());
		Чтение = Новый ЧтениеДанных(Макет);
		Файл = Новый ЧтениеZipФайла(Чтение.ИсходныйПоток());
		Файл.ИзвлечьВсе(РабочийКаталог + КаталогКомпоненты);
		
	КонецЕсли;
	
	Возврат ПутьКФайлуРедактора;
	
КонецФункции

&НаСервере
Функция ПолучитьМакетНаСервере()
	
	ДвоичныеДанные = ПолучитьОбщийМакет("SunEditorHTML");
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеКоллекцииБезВложенности(Знач Коллекция, ИмяСвойства, ЗначениеПоУмолчанию=Неопределено) экспорт
	
	#Если Сервер Тогда
	Если ТипЗнч(Коллекция)=Тип("СтрокаДереваЗначений") Тогда
		
		ДеревоЗначений = Коллекция.Владелец();
		
		Если НЕ ДеревоЗначений.Колонки.Найти(ИмяСвойства)=Неопределено Тогда
			 Возврат Коллекция[ИмяСвойства];
		КонецЕсли; 
	КонецЕсли;
	#КонецЕсли
	
	Если (ТипЗнч(Коллекция)=Тип("Структура") ИЛИ ТипЗнч(Коллекция)=Тип("ФиксированнаяСтруктура")) И НЕ ПустаяСтрока(ИмяСвойства) Тогда
		
		Попытка
			Если Коллекция.Свойство(ИмяСвойства)  И (НЕ ЗначениеНеЗаполнено(Коллекция[ИмяСвойства]) ИЛИ ЗначениеПоУмолчанию=Неопределено)  Тогда			
				Возврат Коллекция[ИмяСвойства];
			КонецЕсли;
		Исключение
			Возврат  ЗначениеПоУмолчанию;
		КонецПопытки;
		
	#Если Клиент Тогда
	ИначеЕсли ТипЗнч(Коллекция)=Тип("ВнешнийОбъект") Тогда
		
		Попытка
			Возврат Коллекция[ИмяСвойства];
		Исключение
			Возврат ЗначениеПоУмолчанию; 
		КонецПопытки;
				
	ИначеЕсли ТипЗнч(Коллекция)=Тип("ДанныеФормыЭлементДерева") И НЕ ПустаяСтрока(ИмяСвойства) Тогда
		
		Если Коллекция.Свойство(ИмяСвойства)  И (НЕ ЗначениеНеЗаполнено(Коллекция[ИмяСвойства]) ИЛИ ЗначениеПоУмолчанию=Неопределено)  Тогда			
			Возврат Коллекция[ИмяСвойства];
		КонецЕсли;
	#КонецЕсли
	ИначеЕсли ТипЗнч(Коллекция)=Тип("Соответствие") И (НЕ ЗначениеНеЗаполнено(Коллекция.Получить(ИмяСвойства)) ИЛИ ЗначениеПоУмолчанию=Неопределено)   Тогда
		Возврат Коллекция.Получить(ИмяСвойства);
	КонецЕсли;
	
	Возврат ЗначениеПоУмолчанию;
КонецФункции

&НаКлиенте
Функция ПолучитьКоллекциюПоСвойству(Коллекция, Знач ИмяСвойства, ЗначениеПоУмолчанию=Неопределено) экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Коллекция",		Коллекция);
	Результат.Вставить("ИмяСвойства",	ИмяСвойства);
	
	Если НЕ ТипЗнч(ИмяСвойства)=Тип("Строка") Тогда
		Возврат Результат;
	КонецЕсли;
			
	МассивСвойств = СтрРазделить(ИмяСвойства, ".");
	
	Если МассивСвойств.Количество()=1 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Ном=0 По МассивСвойств.Количество()-2 Цикл
		Результат.Вставить("Коллекция",	ПолучитьЗначениеКоллекцииБезВложенности(Результат.Коллекция, СокрЛП(МассивСвойств[Ном]), ЗначениеПоУмолчанию));
	КонецЦикла;
	
	Результат.Вставить("ИмяСвойства",	СокрЛП(МассивСвойств[Ном]));
		
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеКоллекции(Знач Коллекция, Знач ИмяСвойства, ЗначениеПоУмолчанию=Неопределено, МягкийРежим=Истина) экспорт
	
	Если (ТипЗнч(Коллекция)=Тип("Число") ИЛИ ТипЗнч(Коллекция)=Тип("Строка") ИЛИ ТипЗнч(Коллекция)=Тип("Булево") ИЛИ ТипЗнч(Коллекция)=Тип("Дата")) Тогда
		
		Если МягкийРежим И ЗначениеЗаполнено(Коллекция) Тогда
			Возврат Коллекция;	
		Иначе
			Возврат ЗначениеПоУмолчанию;
		КонецЕсли;	
		
	КонецЕсли;
	
	Результат = ПолучитьКоллекциюПоСвойству(Коллекция, ИмяСвойства, ЗначениеПоУмолчанию);
	
	Возврат ПолучитьЗначениеКоллекцииБезВложенности(Результат.Коллекция, Результат.ИмяСвойства, ЗначениеПоУмолчанию);
		
КонецФункции

&НаКлиенте
// Определяет заполнено ли переданное значение
//
// Параметры: 
//  Значение - значение, заполенение которого надо проверить
//
// Возвращаемое значение:
//  Истина - значение не заполнено, ложь - иначе.
//
Функция ЗначениеНеЗаполнено(Значение, БулевоЛожьЗаполнено=Истина) Экспорт
	
	Результат = Ложь;
	ТипЗначения = ТипЗнч(Значение);
	
	// Сначала примитивные типы
	Если Значение = Неопределено Тогда
		
		Результат = Истина;
		
	ИначеЕсли Значение = NULL Тогда
		
		Результат = Истина;
		
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		
		Если СокрЛП(Значение) = "" Тогда
			Результат = Истина;
		КонецЕсли; 
		
	ИначеЕсли ТипЗначения = Тип("Число") Тогда
		
		Если Значение = 0 Тогда
			Результат = Истина;
		КонецЕсли; 
		
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		
		Если Значение = Дата('00010101') Тогда
			Результат = Истина;
		КонецЕсли; 
		
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		
		Если Значение=Истина Тогда
			Возврат Ложь;
		Иначе	
			Результат = НЕ БулевоЛожьЗаполнено; // Булево будем считать не пустым
		КонецЕсли;
		
	ИначеЕсли (ТипЗначения = Тип("Соответствие") ИЛИ ТипЗначения = Тип("Структура") ИЛИ ТипЗначения = Тип("Массив")) И Значение.Количество()=0 Тогда	
		
		Результат = Истина; 
	// Для остальных будем считать значение пустым, если оно равно
	// дефолтному значению своего типа
	Иначе
		
		Попытка
			
			Если Значение = Новый(ТипЗначения) Тогда
				Результат = Истина;
			КонецЕсли;
			
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции // ЗначениеНеЗаполнено()

&НаКлиенте
Процедура ПолучитьHTMLИзСтандарта(СтандартРазработки)
	
	ТекстHTML = ПолучитьHTMLИзСтандартаНаСервере(СтандартРазработки);
	// HEAD оригинального файла нужно вырезать, т.к. он не будет корректно загружен
	РаботаСHTMLКлиентСервер.ВырезатьСодержимоеТега(ТекстHTML, "head", ОригинальныйHEAD);
	
	editorHTML.setContents(ТекстHTML);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьHTMLИзСтандартаНаСервере(СтандартРазработки)
	
	Возврат Справочники.СтандартыРазработки.СодержаниеСтандартаHTML(СтандартРазработки);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПоместитьHTMLВСтандартНаСервере(СтандартРазработки, СодержаниеСтандартаХТМЛ)
	
	СтандартОбъект = СтандартРазработки.ПолучитьОбъект();
	СтандартОбъект.УстановитьСодержаниеСтандарта(СодержаниеСтандартаХТМЛ);
	СтандартОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти
